/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'steve' at '11/19/15 2:51 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

import org.ajoberstar.grgit.Grgit
import org.ajoberstar.gradle.git.release.opinion.Strategies

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
    }
}

plugins {
    id 'org.ajoberstar.release-opinion' version '1.3.0'
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

jacoco {
    toolVersion = "0.7.5.201505241946"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.apache.commons:commons-lang3:3.4'
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    // snake yaml for yaml
    compile 'org.yaml:snakeyaml:1.16'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.1'
    compile 'com.fasterxml.jackson.module:jackson-module-afterburner:2.7.1'

    compile "com.rabbitmq:amqp-client:4.9.0"

    testCompile "org.codehaus.groovy:groovy-all:2.4.5"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile 'junit:junit:4.12'
    testCompile "ch.qos.logback:logback-core:1.1.3"
    testCompile "ch.qos.logback:logback-classic:1.1.3"
}

group = 'com.thirdchannel'
version = '0.2.8'

ext.isSnapshot = version.contains('SNAPSHOT')

jar {
    manifest {
        attributes 'Implementation-Title':  'Lago',
                   'Implementation-Version': version,
                   'Specification-Version':  version
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

task createPom {
    pom {
        project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/pom.xml")
}

artifactory {
    contextUrl = System.getenv("ARTIFACTORY_3C_URL")
    publish {
        repository {
            repoKey = isSnapshot ? 'internal-libs-snapshot-local' : 'internal-libs-release-local'
            username = System.getenv('ARTIFACTORY_3C_USERNAME')
            password = System.getenv('ARTIFACTORY_3C_PASSWORD')
            maven = true
        }
        defaults {
            publications 'mavenJava'
            publishBuildInfo = true
            publishArtifacts = true
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier 'sources'
            }

            artifact javadocJar {
                classifier 'javadoc'
            }
        }
    }
}
